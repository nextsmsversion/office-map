@import "norm.scss";
$orange: rgba(245, 132, 31, 1);
$grey: #8D9AA3;
$black:  #272A2C;


body {
  font-family: 'Roboto', sans-serif;
}
.black {
  color: black
}
#float5 {
  background: url('../src/image/office.png') no-repeat;
  width: 1000px;
  height: 500px;
  display: block;
}
polygon, path {
  cursor: pointer;
  fill: transparent;
}
polygon.active, path.active {
  fill: $orange;
}
text {
  cursor: pointer;
  font-size: 17px;
  text-align: center;
}
#map {
  background: #D4D5D7;
  overflow: hidden;
height: 100%;
  #zoom {
    transition: all 750ms cubic-bezier(0.19, 1, 0.22, 1);
  }
}
.controls {
  position: absolute;
  top:0;
  z-index: 200;
  left: 0;
  margin: 0px 10px;
  &__zoom {
    -webkit-user-select: none;
    -moz-user-select: none;
    height: 30px;
    width: 30px;
    border-radius: 4px;
    background: $grey;
    color: #fff;
    font-size: 24px;
    text-align: center;
    line-height: 30px;
    margin: 20px 10px;
    cursor: pointer;
    &:hover {
      background: $black;
    }
  }
}
svg {
  height: 100%;
    width: 100%;
}
.floats {
  margin: 0;
  padding: 0;
  list-style: none;
  text-align: center;
  position: absolute;
  bottom: 0;
  width: 100%;
  &__item {
    display: inline-block;
    vertical-align: bottom;
    padding: 10px 20px;
    background: $grey;
    -webkit-user-select: none;
    -moz-user-select: none;
    margin: 0 10px;
    cursor: pointer;
    border-radius: 5px 5px 0px 0;
    color: #fff;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: 2px;
    &--active {
      font-weight: 500;
      background: $orange;
      padding-top: 20px;
    }
    &--disable {
      cursor: not-allowed;
    }
  }
}
.react-search {
  position: absolute;
  top: 0;
  z-index: 200;
  left: 0;
  margin: 20px 0 0 100px;
  outline: none;
  &__input {
    padding: 10px;
    width: 380px;
    border-radius: 4px;
    border: 1px solid $grey;
    outline: none;
  }
  &__menu-items {
    background: #fff;
    margin: -1px 7px 0;
    padding: 0px;
    box-sizing: border-box;
    overflow: hidden;
    max-height: 274px;
    border-radius: 0 0 4px 4px;
    border: 1px solid $grey;
    border-top: none;
  }
  &__menu--hidden {
    display: none;
  }
  &__menu-item {
      padding: 10px 10px;
      &:hover {
        background: $orange;
        cursor: pointer;
        a {
          color: #fff;
          &:nth-child(2) {
            color: #fff;
          }
        }
      }
      a:nth-child(2) {
        float: right;
        color: $grey;
        font-weight: 500;
      }
  }
}

svg {
  opacity:0;  /* make things invisible upon start */
}
svg.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:.3s;
  -moz-animation-duration:.3s;
  animation-duration:.3s;
  -webkit-animation-delay: 0.3s;
  -moz-animation-delay: 0.3s;
  animation-delay: 0.3s;
}


@-webkit-keyframes fadeIn { from { opacity:0; opacity: 1\9; /* IE9 only */ } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; opacity: 1\9; /* IE9 only */ } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; opacity: 1\9; /* IE9 only */ } to { opacity:1; } }
